// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`data-core: services: broker getById should be get by a non standard id 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "api.mock/collection/find",
      Object {
        "filter": Object {
          "limit": 20,
          "order": Array [
            "_lmt DESC",
          ],
          "where": Object {
            "notid": "1",
          },
        },
      },
      null,
      true,
      false,
      null,
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Observable {
        "_isScalar": true,
        "_subscribe": [Function],
        "value": null,
      },
    },
  ],
}
`;

exports[`data-core: services: broker getById should get by id 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "api.mock/collection/1?filter=%7B%7D",
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Observable {
        "_isScalar": true,
        "_subscribe": [Function],
        "value": null,
      },
    },
  ],
}
`;

exports[`data-core: services: broker upsert should upsert an existing entity 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "api.mock/collection/1",
      Object {
        "_acl": Object {
          "creator": undefined,
          "groups": Object {
            "r": Array [],
            "w": Array [],
          },
        },
        "_id": 1,
        "background": Object {
          "_downloadURL": "https://res.cloudinary.com/www-yoobic-com/image/upload/a_exif/v1513348890/dwitbomq9ilccln6702l.png",
          "_filename": "Screen shot 2017-12-15 à 15.32.33.png",
        },
        "f84ab24a-d931-4b4a-a7bc-6a167acc22a5": Object {
          "fieldTitle": "Photo",
          "fieldType": "photo",
          "value": "https://res.cloudinary.com/www-yoobic-com/image/upload/a_exif/v1504262031/tobfp8xpdq8qgpoaxfdv.jpg",
        },
        "title": "Test",
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Observable {
        "_isScalar": true,
        "_subscribe": [Function],
        "value": null,
      },
    },
  ],
}
`;

exports[`data-core: services: broker upsert should upsert missiondatas 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "api.mock/missiondatas",
      Object {
        "_acl": Object {
          "creator": undefined,
          "groups": Object {
            "r": Array [],
            "w": Array [],
          },
        },
        "background": Object {
          "_downloadURL": "https://res.cloudinary.com/www-yoobic-com/image/upload/a_exif/v1513348890/dwitbomq9ilccln6702l.png",
          "_filename": "Screen shot 2017-12-15 à 15.32.33.png",
        },
        "f84ab24a-d931-4b4a-a7bc-6a167acc22a5": Object {
          "fieldTitle": "Photo",
          "fieldType": "photo",
          "value": "https://res.cloudinary.com/www-yoobic-com/image/upload/a_exif/v1504262031/tobfp8xpdq8qgpoaxfdv.jpg",
        },
        "title": "Test",
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Observable {
        "_isScalar": true,
        "_subscribe": [Function],
        "value": null,
      },
    },
  ],
}
`;

exports[`data-core: services: broker upsert should upsert with a new entity 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      "api.mock/collection",
      Object {
        "_acl": Object {
          "creator": undefined,
          "groups": Object {
            "r": Array [],
            "w": Array [],
          },
        },
        "background": Object {
          "_downloadURL": "https://res.cloudinary.com/www-yoobic-com/image/upload/a_exif/v1513348890/dwitbomq9ilccln6702l.png",
          "_filename": "Screen shot 2017-12-15 à 15.32.33.png",
        },
        "f84ab24a-d931-4b4a-a7bc-6a167acc22a5": Object {
          "fieldTitle": "Photo",
          "fieldType": "photo",
          "value": "https://res.cloudinary.com/www-yoobic-com/image/upload/a_exif/v1504262031/tobfp8xpdq8qgpoaxfdv.jpg",
        },
        "title": "Test",
      },
    ],
  ],
  "results": Array [
    Object {
      "isThrow": false,
      "value": Observable {
        "_isScalar": true,
        "_subscribe": [Function],
        "value": null,
      },
    },
  ],
}
`;
